/*
 * 取余运算：韩信点兵，不足百人，三人一行多一人，七人一行少两人，五人一行正好，
 * 问有多少人？
 *这个数被3除余1，被5余0，被7余5
 *3...1
 *5...0
 *7...5
 *35这个数被5和7除余0，被3除余2，想要被3整除，就必须乘以2，这样就余4，进一位余1
 *15这个数被3和5整除，被7除余1，想要被7除余5，必须乘以5
 *21这个数被3和7整除，被5除余1，要想被5除余0，21必须*5，这样就余5，进一位就是0
 *对于式子：35*2+15*5+21*5
 *当除以3的时候，第一项余1，第二三项余0，总体余1；
 *当除以5时，三项都余0，总体余0；
 *当除以7时，第一、三项都余0，第二项余5，总体余5
 *这个式子符合题意，当我们对这个式子加或减105(3、5、7的公倍数)时，对该性质没有影响
 */
public class CalSoldieryNoLoop {
	public static void main(String args[]) {
		int sum=0;  //定义人数
		int BaseNum[]= {1,1,1}; //定义基础数(基础数相加等于总人数)
		int num[]= {3,5,7};		//定义除数
		int left[]= {1,0,5};   //定义余数
		int flag[]= {0,0,0};    //定义公倍数
		flag[0] = num[1]*num[2];  //求公倍数
		flag[1]	= num[0]*num[2];
		flag[2]	= num[0]*num[1];
		BaseNum[0]= flag[0]*(flag[0]%num[0])*left[0];  //求基础数
		BaseNum[1]= flag[1]*(flag[1]%num[1])*left[1];
		BaseNum[2]= flag[2]*(flag[2]%num[2])*left[2];
		sum=BaseNum[0]+BaseNum[1]+BaseNum[2];  //求人数
		sum %=num[0]*num[1]*num[2];  //把人数压缩到100以内
		System.out.print("士兵有"+sum+"人");  //输出结果
	}
}
